// Mock Chat Data for Development/Testing
// Mock Chat Data for Development/Testing
import type { ChatRoom, Message, User } from "../types/chat.types";

export const mockUsers: User[] = [
  {
    id: "user-1",
    name: "Alice Johnson",
    avatar: "https://api.dicebear.com/7.x/avataaars/svg?seed=Alice",
    status: "online",
  },
  {
    id: "user-2",
    name: "Bob Smith",
    avatar: "https://api.dicebear.com/7.x/avataaars/svg?seed=Bob",
    status: "away",
  },
  {
    id: "user-3",
    name: "Charlie Davis",
    avatar: "https://api.dicebear.com/7.x/avataaars/svg?seed=Charlie",
    status: "offline",
  },
  {
    id: "user-4",
    name: "Diana Wilson",
    avatar: "https://api.dicebear.com/7.x/avataaars/svg?seed=Diana",
    status: "online",
  },
];

export const mockRooms: ChatRoom[] = [
  {
    id: "room-1",
    name: "Alice Johnson",
    type: "direct",
    avatar: "https://api.dicebear.com/7.x/avataaars/svg?seed=Alice",
    participants: [mockUsers[0]],
    unreadCount: 2,
    createdAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 5 * 60 * 1000).toISOString(),
    lastMessage: {
      id: "msg-1",
      roomId: "room-1",
      senderId: "user-1",
      senderName: "Alice Johnson",
      senderAvatar: "https://api.dicebear.com/7.x/avataaars/svg?seed=Alice",
      content: "Hey! Did you finish the project?",
      timestamp: new Date(Date.now() - 5 * 60 * 1000).toISOString(),
      read: false,
      type: "text",
    },
  },
  {
    id: "room-2",
    name: "Bob Smith",
    type: "direct",
    avatar: "https://api.dicebear.com/7.x/avataaars/svg?seed=Bob",
    participants: [mockUsers[1]],
    unreadCount: 0,
    createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
    lastMessage: {
      id: "msg-2",
      roomId: "room-2",
      senderId: "current-user",
      senderName: "You",
      content: "Thanks for your help!",
      timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
      read: true,
      type: "text",
    },
  },
  {
    id: "room-3",
    name: "Project Team",
    type: "group",
    avatar: "https://api.dicebear.com/7.x/shapes/svg?seed=ProjectTeam",
    participants: [mockUsers[0], mockUsers[1], mockUsers[2]],
    unreadCount: 5,
    createdAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 30 * 60 * 1000).toISOString(),
    lastMessage: {
      id: "msg-3",
      roomId: "room-3",
      senderId: "user-2",
      senderName: "Bob Smith",
      content: "Let's meet tomorrow at 10 AM",
      timestamp: new Date(Date.now() - 30 * 60 * 1000).toISOString(),
      read: false,
      type: "text",
    },
  },
  {
    id: "room-4",
    name: "Diana Wilson",
    type: "direct",
    avatar: "https://api.dicebear.com/7.x/avataaars/svg?seed=Diana",
    participants: [mockUsers[3]],
    unreadCount: 0,
    createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
    lastMessage: {
      id: "msg-4",
      roomId: "room-4",
      senderId: "user-4",
      senderName: "Diana Wilson",
      content: "See you at the hackathon!",
      timestamp: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
      read: true,
      type: "text",
    },
  },
];

export const mockMessages: Record<string, Message[]> = {
  "room-1": [
    {
      id: "msg-1-1",
      roomId: "room-1",
      senderId: "user-1",
      senderName: "Alice Johnson",
      senderAvatar: "https://api.dicebear.com/7.x/avataaars/svg?seed=Alice",
      content: "Hi! How's the hackathon prep going?",
      timestamp: new Date(Date.now() - 30 * 60 * 1000).toISOString(),
      read: true,
      type: "text",
    },
    {
      id: "msg-1-2",
      roomId: "room-1",
      senderId: "current-user",
      senderName: "You",
      content: "Great! I'm working on the frontend template.",
      timestamp: new Date(Date.now() - 25 * 60 * 1000).toISOString(),
      read: true,
      type: "text",
    },
    {
      id: "msg-1-3",
      roomId: "room-1",
      senderId: "user-1",
      senderName: "Alice Johnson",
      senderAvatar: "https://api.dicebear.com/7.x/avataaars/svg?seed=Alice",
      content: "That's awesome! I saw you added Socket.IO support.",
      timestamp: new Date(Date.now() - 20 * 60 * 1000).toISOString(),
      read: true,
      type: "text",
    },
    {
      id: "msg-1-4",
      roomId: "room-1",
      senderId: "current-user",
      senderName: "You",
      content: "Yes! Real-time notifications and chat are working now ðŸš€",
      timestamp: new Date(Date.now() - 15 * 60 * 1000).toISOString(),
      read: true,
      type: "text",
    },
    {
      id: "msg-1-5",
      roomId: "room-1",
      senderId: "user-1",
      senderName: "Alice Johnson",
      senderAvatar: "https://api.dicebear.com/7.x/avataaars/svg?seed=Alice",
      content: "Hey! Did you finish the project?",
      timestamp: new Date(Date.now() - 5 * 60 * 1000).toISOString(),
      read: false,
      type: "text",
    },
  ],
  "room-2": [
    {
      id: "msg-2-1",
      roomId: "room-2",
      senderId: "user-2",
      senderName: "Bob Smith",
      senderAvatar: "https://api.dicebear.com/7.x/avataaars/svg?seed=Bob",
      content: "Need any help with the backend integration?",
      timestamp: new Date(Date.now() - 3 * 60 * 60 * 1000).toISOString(),
      read: true,
      type: "text",
    },
    {
      id: "msg-2-2",
      roomId: "room-2",
      senderId: "current-user",
      senderName: "You",
      content: "Thanks for your help!",
      timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
      read: true,
      type: "text",
    },
  ],
  "room-3": [
    {
      id: "msg-3-1",
      roomId: "room-3",
      senderId: "user-1",
      senderName: "Alice Johnson",
      senderAvatar: "https://api.dicebear.com/7.x/avataaars/svg?seed=Alice",
      content: "Team, we need to discuss the project timeline",
      timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
      read: false,
      type: "text",
    },
    {
      id: "msg-3-2",
      roomId: "room-3",
      senderId: "user-3",
      senderName: "Charlie Davis",
      senderAvatar: "https://api.dicebear.com/7.x/avataaars/svg?seed=Charlie",
      content: "I'm available tomorrow morning",
      timestamp: new Date(Date.now() - 1 * 60 * 60 * 1000).toISOString(),
      read: false,
      type: "text",
    },
    {
      id: "msg-3-3",
      roomId: "room-3",
      senderId: "user-2",
      senderName: "Bob Smith",
      senderAvatar: "https://api.dicebear.com/7.x/avataaars/svg?seed=Bob",
      content: "Let's meet tomorrow at 10 AM",
      timestamp: new Date(Date.now() - 30 * 60 * 1000).toISOString(),
      read: false,
      type: "text",
    },
  ],
};

// Function to load mock data into stores
export function loadMockChatData() {
  return {
    rooms: mockRooms,
    messages: mockMessages,
  };
}

